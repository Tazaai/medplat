name: Integration tests (manual)

on:
  workflow_dispatch:

jobs:
  integration:
    name: Run integration tests (requires secrets)
    runs-on: ubuntu-latest
    environment: integration-tests
    permissions:
      contents: read
      id-token: write
    steps:
      - uses: actions/checkout@v4

      - name: Validate required secrets
        env:
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          GCP_PROJECT: ${{ secrets.GCP_PROJECT }}
          GCP_SA_KEY: ${{ secrets.GCP_SA_KEY }}
          FIREBASE_SERVICE_KEY: ${{ secrets.FIREBASE_SERVICE_KEY }}
        run: |
          MISSING=0
          for name in OPENAI_API_KEY GCP_PROJECT GCP_SA_KEY FIREBASE_SERVICE_KEY; do
            val="${!name}"
            if [ -z "$val" ]; then
              echo "❌ $name missing"
              MISSING=$((MISSING+1))
            else
              echo "✅ $name present"
            fi
          done
          if [ $MISSING -gt 0 ]; then
            echo "Missing required secrets. Set them in repository Settings → Secrets → Actions."
            exit 1
          fi

      - name: Authenticate to GCP
        uses: google-github-actions/auth@v2
        with:
          credentials_json: ${{ secrets.GCP_SA_KEY }}

      - name: Ensure secrets in Secret Manager
        env:
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          FIREBASE_SERVICE_KEY: ${{ secrets.FIREBASE_SERVICE_KEY }}
          GCP_PROJECT: ${{ secrets.GCP_PROJECT }}
        run: |
          printf '%s' "$FIREBASE_SERVICE_KEY" > /tmp/firebase_key.json
          if ! gcloud secrets describe medplat-firebase-key --project=$GCP_PROJECT >/dev/null 2>&1; then
            gcloud secrets create medplat-firebase-key --data-file=/tmp/firebase_key.json --project=$GCP_PROJECT
          else
            gcloud secrets versions add medplat-firebase-key --data-file=/tmp/firebase_key.json --project=$GCP_PROJECT
          fi
          printf '%s' "$OPENAI_API_KEY" > /tmp/openai_key.txt
          if ! gcloud secrets describe medplat-openai-key --project=$GCP_PROJECT >/dev/null 2>&1; then
            gcloud secrets create medplat-openai-key --data-file=/tmp/openai_key.txt --project=$GCP_PROJECT
          else
            gcloud secrets versions add medplat-openai-key --data-file=/tmp/openai_key.txt --project=$GCP_PROJECT
          fi

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'

      - name: Install backend deps
        run: npm ci --prefix backend

      - name: Run OpenAI integration test
        env:
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
        run: node backend/test/test_openai_integration.cjs

      - name: Run Firebase integration test
        env:
          FIREBASE_SERVICE_KEY: ${{ secrets.FIREBASE_SERVICE_KEY }}
        run: node backend/test/test_firebase_integration.cjs
